1)For the given JSON iterate over all for loops (for, for in, for of, forEach)



i)var person={
 	first_name:"johnny",
  	last_name: "johnson",
	phone:"703-3424-1111"
};
for (var property in person) {
  	console.log(property,":",person[property]);
}


ii)var people = [{
    "name" : "Darren", 
    "age" : "24",
    "gender"   : "Male",
    
},{
    "name" : "Mai", 
    "age" : "28",
    "gender"   : "Female",
    
}];

for(var i = 0; i < people.length; i++) {
    var person = people[i];

    console.log('Name: '+person.name+' Age:'+person.age);
}



iii)var names = ["jerry", "tom", "pluto", "micky", "mini"];
     names.forEach(function1);
    function function1(currentValue, index) {
   console.log("Index in array is: "+index + " ::  Value is: "+currentValue);
}


iV)let array = [{
  name : 'name1'
},
 {
   name : 'name2'
},
 {
   name : 'name3'  
}]


for(key of array){
  console.log(key.name)
}



array.forEach((element)=>{
  console.log(element.name)
})



2)Create your own resume data in JSON format


{
  "basics": {
    "name": "Ajmalkhan",
    "label": "",
    "picture": "",
    "email": "ajmal834288@gmail.com",
    "phone": "A phone number, with any formatting you like. E.g. (555) 555-5555.",
    "degree": "msc(cst)",
    "website": "Your website URL",
    "summary": "A one-sentence to one-paragraph overview text. Do not include any line-breaks.",
    "location": {
      "address": "Your street address or mailing address",
      "postalCode": "Your postal code (ZIP in the U.S.)",
      "city": "Your city",
      "countryCode": "Your country (e.g. USA)",
      "region": "Your region (state in the U.S.)"
    };


3)Read about the difference between window, screen and document in javascript

i)Window
The JavaScript window object sits at the top of the JavaScript Object hierarchy and represents the browser window. 
The window object is supported by all browsers. All global JavaScript objects , functions, and variables automatically become members of the window object. 
The window is the first thing that gets loaded into the browser . This window object has the majority of the properties like length, innerWidth, innerHeight, name, if it has been closed, its parents, and more.


Window methods:
Some window object methods are:
window.open() : open a new window
window.close() : close the current window
window.moveTo() : move the current window
window.resizeTo() : resize the current window

ii)Document
The Document object represents any web page loaded in the browser and serves as an entry point into the web pageâ€™s content, which is the DOM tree. When an HTML document is loaded into a web browser , it becomes a document object. 
It is the root node of the HTML document. 
The document actually gets loaded inside the window object and has properties available to it like title, URL, cookie, etc.

iii)Screen
Screen is a small information object about physical screen dimensions of the user device. It can be used to display screen width, height, colorDepth, pixelDepth etc. It is not mandatory to write window prefix with screen object like window.screen. It can be written without window prefix.
Properties:
screen.width
screen.height
screen.availWidth
screen.availHeight
screen.colorDepth
screen.pixelDepth



4)Codekata practice

Write a code to get the input in the given format and print the output in the given format

Input Description:
First-line indicates two integers separated by space. Second-line indicates three integers separated by space. Third-line indicates three integers separated by space

Output Description:
Print the input in the same format.

Sample Input :
2 5
2 5 6
2 4 5
Sample Output :
2 5
2 5 6
2 4 5


Ans:
const readline = require("readline");

const inp = readline.createInterface({
  input: process.stdin
});

const userInput = [];

inp.on("line", (data) => {
  userInput.push(data);
});

inp.on("close", () => {
  
for (let i = 0; i < userInput.length;i++)
  console.log(userInput[i]);

 
});